// <auto-generated />
using System;
using EventEaseP1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventEaseP1.Migrations
{
    [DbContext(typeof(Poepart1Context))]
    partial class Poepart1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventEaseP1.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateOnly>("BookingDate")
                        .HasColumnType("date");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VenueId")
                        .HasColumnType("int");

                    b.HasKey("BookingId")
                        .HasName("PK__Bookings__73951ACD5AD8848B");

                    b.HasIndex("EventId");

                    b.HasIndex("VenueId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("EventEaseP1.Models.Eventss", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("date")
                        .HasColumnName("EventDate");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImageUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name");

                    b.Property<int>("VenueId")
                        .HasColumnType("int")
                        .HasColumnName("VenueID");

                    b.HasKey("EventId")
                        .HasName("PK__Eventss__7944C87065698F4E");

                    b.HasIndex("VenueId");

                    b.ToTable("Eventss");
                });

            modelBuilder.Entity("EventEaseP1.Models.Venue", b =>
                {
                    b.Property<int>("VenueId")
                        .HasColumnType("int")
                        .HasColumnName("VenueID");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("VenueId")
                        .HasName("PK__Venues__3C57E5D2C536C794");

                    b.ToTable("Venues");
                });

            modelBuilder.Entity("EventEaseP1.Models.Booking", b =>
                {
                    b.HasOne("EventEaseP1.Models.Eventss", "Event")
                        .WithMany("Bookings")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK__Bookings__EventI__3C69FB99");

                    b.HasOne("EventEaseP1.Models.Venue", "Venue")
                        .WithMany("Bookings")
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Bookings__VenueI__47DBAE45");

                    b.Navigation("Event");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("EventEaseP1.Models.Eventss", b =>
                {
                    b.HasOne("EventEaseP1.Models.Venue", "Venue")
                        .WithMany("Eventsses")
                        .HasForeignKey("VenueId")
                        .IsRequired()
                        .HasConstraintName("FK__Eventss__VenueID__398D8EEE");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("EventEaseP1.Models.Eventss", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("EventEaseP1.Models.Venue", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Eventsses");
                });
#pragma warning restore 612, 618
        }
    }
}
